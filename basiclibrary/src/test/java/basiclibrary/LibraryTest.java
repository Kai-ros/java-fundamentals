/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {

    // Testing variables.
    int[] testArray1 = {2, 3 ,4, 5, 6, 7, 8, 9, 42};
    int[] testArray2 = {2, 3 ,4, 5, 6, 6, 8, 7, 8, 9, 42};
    int[] testArray3 = {2, 3 ,4, 6, 6, 7, 8, 9};


    int[][] testArrayOfArrays = {
            {66, 64, 58, 65, 71, 57, 60},
            {1},
            {57, 65, 65, 70, 72, 65, 51},
            {55, 54, 60, 53, 59, 57, 61},
            {65, 56, 55, 52, 55, 62, 57},
            {2, 3, 4}
    };

    @Test
    public void testRoll() {
        assertTrue(
                "Roll should return an array of length N.",
                (Library.roll(6)).length == 6
        );
    }

    @Test
    public void testRoll_ReturnsAnArrayOfLengthN() {
        assertFalse(
                "Roll should return an array of length N.",
                (Library.roll(6)).length == 7
        );
    }

    @Test
    public void testRoll_HandlesAnEmptyArray() {
        assertTrue(
                "Roll should return an array of length N.",
                (Library.roll(0)).length == 0
        );
    }

    @Test
    public void testContainsDuplicates() {
        assertTrue(
                "Method should return a false if there are no duplicates.",
                Library.containsDuplicates(testArray1) == false
        );
    }

    @Test
    public void testContainsDuplicates_ReturnsTrue() {
        assertTrue(
                "Method should return a true if there are duplicates.",
                Library.containsDuplicates(testArray2) == true
        );
    }

    @Test
    public void testCalculateAverages() {
        double expectedValue = 5.625;
        assertTrue(
                "Method should return a double of value 5.625.",
                Library.calculateAverages(testArray3) == expectedValue
        );
    }

    @Test
    public void testArrayOfLowestAverageValue() {
        assertArrayEquals(
                "Method should return the smallest array.",
                new int[] {1},
                Library.arrayOfLowestAverageValue(testArrayOfArrays)
        );
    }
}
